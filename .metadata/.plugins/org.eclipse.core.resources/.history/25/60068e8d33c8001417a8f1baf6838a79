package com.gdc.nms.testing;

import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Enumeration;

import jade.core.AID;

import com.gdc.nms.model.Device;
import com.gdc.nms.model.DeviceResource;
import com.gdc.nms.model.Interface;
import com.gdc.nms.model.SnmpVersion;
import com.gdc.nms.testing.exception.IllegalLocalAddress;
import com.gdc.nms.testing.exception.TimeoutException;
import com.gdc.nms.testing.response.DeviceInterfacesResponse;
import com.gdc.nms.testing.response.DeviceResourcesResponse;

public class Main {
    public static void main(String[] args) {
    	try{
    		System.out.println("Your Host addr: " + InetAddress.getLocalHost().getHostAddress());
    		  // often returns "127.0.0.1"
    	        Enumeration<NetworkInterface> n;
    			
    				n = NetworkInterface.getNetworkInterfaces();
    				int i=0;
    			
    	        for (; n.hasMoreElements();)
    	        {	
    	        	System.out.println("network interface"+i);
    	            NetworkInterface e = n.nextElement();
    	            System.out.println("e "+e.getName());
//    	            System.out.println("name"+e.getDisplayName());
    	            System.out.println("Loopback"+e.isLoopback());
    	            System.out.println("p2p"+e.isPointToPoint());
    	            System.out.println("up"+e.isUp());
    	            System.out.println("vitual"+e.isVirtual());
    	            Enumeration<InetAddress> a = e.getInetAddresses();
    	            int j=0;
    	            for (; a.hasMoreElements();)
    	            {
    	            	System.out.println("inter addres"+j);
    	            	
    	                InetAddress addr = a.nextElement();
    	                System.out.println(" ip " + addr.getHostAddress());
    	                j++;
    	            }
    	        	i++;

    	        }
    	}catch(Exception ex){
    		
    	}
			
//        if (args.length == 0) {
//            return;
//        } else if ("--client".equals(args[0])) {
//            try {
//                Client client = new Client();
//                client.start();
//
//                Device d = new Device("172.28.28.76");
//                d.setManaged(true);
//                d.setReachable(true);
//                d.setSnmpable(true);
//                d.setSnmpUnreachable(false);
//                d.setSysObjectID("1.3.6.1.4.1.9.1.619");
//                d.setSnmpVersion(SnmpVersion.V2);
//                d.setSnmpPublicCommunity("a1k0st008RW");
//
//                AID receiver = client.getServerByHostname("arcom.nms.com.mx");
//
//                try {
//                    DeviceResourcesResponse resources = client.getDeviceResources(d, receiver, 50000);
//                    if (resources == null) {
//                        System.out.println("Some error ocurrs.");
//                    } else {
//                        for (DeviceResource r : resources.getDeviceResources()) {
//                            System.out.println(r.getName());
//                        }
//                    }
//
//                    System.out.println("Ifaces: ");
//                    DeviceInterfacesResponse interfaces = client.getInterfaces(d, receiver, 50000);
//
//                    if (interfaces == null) {
//                        System.out.println("Some error ocurrs.");
//                    } else {
//                        for (Interface i : interfaces.getInterfaces()) {
//                            System.out.println(i.getIfIndex());
//                        }
//                    }
//
//                } catch (TimeoutException e) {
//                    System.out.println("TimeOut Elapsed");
//                } catch (Exception e) {
//                    e.printStackTrace();
//                }
//
//            } catch (IllegalLocalAddress e) {
//                e.printStackTrace();
//            }
//        } else if ("--server".equals(args[0])) {
//            Server server = new Server(args[1], new String[] { args[2] }, args[3], Integer.parseInt(args[4]));
//            server.start();
//        }
    }
}
